sudo: required
dist: trusty
language: c
services:
  - docker

jobs:
   include:
     - stage: given ver string build image from VERSION build-arg
       env: 
        - VERSION=4.3.1
        - DOCKER_TAG=4.3.1
        - URL=http://127.0.0.1:8080/exist/rest/db
       install: skip
       script:
       - docker build --tag existdb/existdb:${VERSION} --build-arg "VERSION=${VERSION}" .
       - docker-compose up -d
       - echo ' CHECK! ps cmd should be able to grep exist'
       - docker ps -a | grep 'exist'
       - echo ' CHECK! ps cmd should show health status'
       - docker ps -a | grep -oP 'health.\sstarting'
       - N=0;until curl -Isf http://127.0.0.1:8080/ | grep 'Jetty' || [ $N -eq 20 ]; do sleep $(( N++ )); done
       - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
       - echo ' CHECK! eXist logs should show server has started'
       - docker logs exist | grep -oP '^.+\K(Server has started.+)$'
       - sleep 30
       - echo ' CHECK! healthcheck should register healthy'
       - "docker ps | grep -o 'healthy'"
       - |
          set -eo pipefail
          # CHECK! by invoking client.jar,
          # user should be able to change password and
          # this config change will show up in eXist logs
          docker exec exist java -jar start.jar client -q -u admin -P '' \
          -x 'sm:passwd("admin", "nimda")' 2>/dev/null && \
          docker logs exist | tail -n 3 | \
          grep -oP '^.+\K(INFO(.+)Storing configuration(.+$))'
       - |
          set -eo pipefail
          # CHECK! with a http client like curl,
          # user should be be able to use the rest interface
          # to POST a query to the database
          cat <<EOF | curl -s -H 'Content-Type: text/xml' -u 'admin:nimda' --data-binary @- "$URL"
          <query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
          <text><![CDATA[
          xquery version '3.1';
          string-join(repo:list(), '&#10;')
          ]]></text>
          </query>
          EOF
       - |
          set -eo pipefail
          # CHECK! user should be able to
          # copy a config file from container to local disk'
          docker cp exist:eXist/config/conf.xml ./conf.xml \
          && [[ -e ./conf.xml ]]
       - |
          set -eo pipefail
          # CHECK! user should be able to
          # copy conf.xml into container TODO TEST
          docker cp ./conf.xml exist:eXist/config/conf.xml
       - |
          set -eo pipefail
          # CHECK! with changes made to logger
          # logged data should be able to
          # be viewed in docker logs TODO
          cat <<EOF | curl -s -H 'Content-Type: text/xml' -u 'admin:nimda' --data-binary @- "$URL"
          <query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
          <text><![CDATA[
          xquery version '3.1';
          (
          'TODO',
          sm:is-dba(xmldb:get-current-user()),
          util:log-system-out('HELLO WORLD!'),
          system:get-exist-home(),
          file:list(system:get-exist-home())
          )
          ]]></text>
          </query>
          EOF
       - docker-compose down

     # - stage: given commit hash build image from BRANCH build-arg
     #   env: DOCKER_TAG=3b195797a
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down
     # - stage: given master branch name build image from BRANCH build-arg
     #   env: DOCKER_TAG=master
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down

sudo: required
dist: trusty
language: c
services:
  - docker

jobs:
   include:
     - stage: given ver string build image from VERSION build-arg
       env: 
        - VERSION=4.3.1
        - DOCKER_TAG=4.3.1
        - URL=http://127.0.0.1:8080/exist/rest/db
       install: skip
       script:
       - docker build --tag existdb/existdb:${VERSION} --build-arg "VERSION=${VERSION}" .
       - docker-compose up -d
       - echo ' CHECK! ps cmd should be able to grep exist'
       - docker ps -a | grep 'exist'
       - echo ' CHECK! ps cmd should show health status'
       - docker ps -a | grep -oP 'health.\sstarting'
       - N=0;until curl -Isf http://127.0.0.1:8080/ | grep 'Jetty' || [ $N -eq 20 ]; do sleep $(( N++ )); done
       - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
       - echo ' CHECK! eXist logs should show server has started'
       - docker logs exist | grep -oP '^.+\K(Server has started.+)$'
       - sleep 30
       - echo ' CHECK! healthcheck should register healthy'
       - "docker ps | grep -o 'healthy'"
       - |
          # CHECK! the ability to
          #  - invoke client.jar
          #  - change password
          #  - query db with new pass
          # the is-dba() query call should return true
          set -eo pipefail
          docker exec exist java -jar start.jar client -q -u admin -P '' \
          -x 'sm:passwd("admin", "nimda")' 2>/dev/null \
          && docker exec exist java -jar start.jar client -q -u admin -P nimda \
          -x 'sm:is-dba(xmldb:get-current-user())' 2>/dev/null | \
          grep 'true'
       - |
          # CHECK! the ability to
          #  - invoke a http client (curl)
          #  - use GET to query the database
          #  the get-version() query,
          #  should match the version of the freshly minted built image
          set -eo pipefail
          curl -s -u 'admin:nimda' "$URL?_query=system:get-version()&_wrap=no" | \
          grep "$VERSION"
       - |
          # CHECK! the ability to
          #  - invoke a http client (curl)
          #  - to query the database by POSTing
          # when calling repo:list(),
          # a list of items should be grepped TODO
          set -eo pipefail
          cat <<EOF | curl -s -H 'Content-Type: text/xml' -u 'admin:nimda' --data-binary @- "$URL"
          <query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
          <text><![CDATA[
          xquery version '3.1';
          string-join(repo:list(), '&#10;')
          ]]></text>
          </query>
          EOF
       - |
          # CHECK! with the exist containers provided config dir,
          # a user should be able to list configuration files
          # that will enable user to alter eXist start up options.
          set -eo pipefail
          cat <<EOF | curl -s -H 'Content-Type: text/xml' -u 'admin:nimda' --data-binary @- "$URL"
          <query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
          <text><![CDATA[
          xquery version '3.1';
          string-join(
            file:list( system:get-exist-home() || '/config' )/@name/string(),
            '&#10;'
            )
          ]]></text>
          </query>
          EOF
       - |
          set -eo pipefail
          # CHECK! the ability to
          # - copy a config file from container to local disk
          # after copying conf.xml the file should exist locally
          set -eo pipefail
          docker cp exist:eXist/config/conf.xml ./conf.xml \
          && [[ -e ./conf.xml ]] && ls -l ./conf.xml
       - |
          # changed configuration item
          # CHECK! the abilty to
          #  - alter a config item in a config file,
          #  - copy the altered config file into containers config dir.
          #  - stopping and starting the container.
          # The check should show the changed item is effective after start up
          # TODO
          set -eo pipefail
          sed -i.bak 's/wait-before-shutdown="120000"/wait-before-shutdown="60000"/' ./conf.xml \
          && ls . \
          && grep 'wait-before-shutdown' \
          && docker cp ./conf.xml exist:eXist/config/conf.xml
       - |
          # Changes made to logger
          # CHECK! the abilty to
          # - call log functions
          # - view results in docker logs
          #
          # eXist log queries should turn up in docker logs
          {
          cat <<EOF | curl -s -H 'Content-Type: text/xml' -u 'admin:nimda' --data-binary @- "$URL"
          <query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
          <text><![CDATA[
          xquery version '3.1';
          (
          util:log-system-out('HELLO SYSTEM-OUT!'),
          util:log-system-err('HELLO SYSTEM-ERR!'),
          util:log('INFO', 'HELLO logged INFO!'),
          util:log('WARN', 'HELLO logged WARN' )
          )
          ]]></text>
          </query>
          EOF
          } && docker logs exist | grep HELLO
       - docker-compose down

     # - stage: given commit hash build image from BRANCH build-arg
     #   env: DOCKER_TAG=3b195797a
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down
     # - stage: given master branch name build image from BRANCH build-arg
     #   env: DOCKER_TAG=master
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down

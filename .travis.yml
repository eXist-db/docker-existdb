sudo: required
dist: trusty
language: c
services:
  - docker

jobs:
   include:
     - stage: given ver string build image from VERSION build-arg
       env: 
        - VERSION=4.3.1
        - DOCKER_TAG=4.3.1
        - DEX='docker exec java -jar start.jar client -q -u admin -P nimda -x'
       install: skip
       script:
       - docker build --tag existdb/existdb:${VERSION} --build-arg "VERSION=${VERSION}" .
       - docker-compose up -d
       - docker ps -a | grep 'exist'
       - docker ps -a | grep -oP 'health.\sstarting'
       - N=0;until curl -Isf http://127.0.0.1:8080/ | grep 'Jetty' || [ $N -eq 20 ]; do sleep $(( N++ )); done
       - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
       - echo ' - check\: eXist logs should show server hasd started'
       - docker logs exist | grep -oP '^.+\K(Server has started.+$)'
       - sleep 30
       - echo ' - check\: user can change password'
       - docker exec exist java -jar start.jar client -q -u admin -P '' -x 'sm:passwd("admin", "nimda")' 2>/dev/null
       - docker exec java -jar start.jar client -q -u admin -P nimda -x 'sm:is-dba(xmldb:get-current-user())' 2>/dev/null
       - docker exec java -jar start.jar client -q -u admin -P nimda -x 'system:get-version()'  2>/dev/null
       - docker exec java -jar start.jar client -q -u admin -P nimda -x 'string-join(repo:list(), "&#10;")' 2>/dev/null
       - echo ' - check\: healthcheck should register healthy'
       - docker ps | grep -o 'healthy'
       - echo ' - check\: copying conf.xml to local disk'
       - docker cp exist:eXist/config/conf.xml ./conf.xml
       - test -e './conf.xml'
       - echo ' - copy conf.xml into container'
       - docker cp  ./conf.xml exist:eXist/config/conf.xml
       - docker-compose down

     # - docker inspect exist
     # - stage: given commit hash build image from BRANCH build-arg
     #   env: DOCKER_TAG=3b195797a
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down
     # - stage: given master branch name build image from BRANCH build-arg
     #   env: DOCKER_TAG=master
     #   install: skip
     #   script:
     #   - docker build --tag existdb/existdb:${DOCKER_TAG} --build-arg "BRANCH=${DOCKER_TAG}"  .
     #   - docker-compose up -d
     #   - docker ps -a | grep 'exist'
     #   - while [[ -z "$(curl -I -s -f 'http://127.0.0.1:8080/')" ]] ; do sleep 10 ; done
     #   - curl -Is http://127.0.0.1:8080/ | grep 'Jetty'
     #   - docker logs exist | grep 'Server has started'
     #   - docker-compose down

